                                                                              
                                                                              
   playground                                                           index
   (version 1.0.0)               /home/doug/projets/python/ants/playground.py

   Provides the Playground class which is the sandbox where
   ants are living.

          
   Modules
            Queue                 multiprocessing          utils              
            logging               threading                                   

       
Classes
         __builtin__.object                                                                                
                                                                                                           
                 Playground                                                                                
                                                                                                           
         threading.Thread(threading._Verbose)                                                              
                                                                                                           
                 Worker                                                                                    
                                                                                                           
                                                                                                           
         class Playground(__builtin__.object)                                                              
             The Playground class provides the eco-system within ants are living.                          
             - size is a tuple seen as a dimension (width, height).                                        
                                                                                                           
               Methods defined here:                                                                       
                                                                                                           
               __init__(self, size, response_q)                                                            
                                                                                                           
               add_ant(self, ant)                                                                          
                  Add ant to the playground ant collection                                                 
                                                                                                           
               add_farm(self, farm)                                                                        
                  Add farm to the playground farm collection                                               
                                                                                                           
               add_mine(self, mine)                                                                        
                  Add mine to the playground mine collection                                               
                                                                                                           
               get_ant(self, ant_id)                                                                       
                  Returns the ant which ID is given.                                                       
                  Returns None if no ant in the ant collection has the given ID                            
                                                                                                           
               get_farm(self, farm_id)                                                                     
                  Returns the farm which ID is given.                                                      
                  Returns None if no farm in the farm collection has the given ID                          
                                                                                                           
               get_mine(self, mine_id)                                                                     
                  Returns the mine which ID is given.                                                      
                  Returns None if no mine in the mine collection has the given ID                          
                                                                                                           
               scan(self, position)                                                                        
                  Returns all objects (ants, farms, mines) nearby the given position.                      
                  - position is a tupe seen as coordinates (x, y)                                          
                                                                                                           
                 ---------------------------------------------------------------------------------------   
                                                                                                           
               Data descriptors defined here:                                                              
                                                                                                           
               __dict__                                                                                    
                  dictionary for instance variables (if defined)                                           
                                                                                                           
               __weakref__                                                                                 
                  list of weak references to the object (if defined)                                       
                                                                                                           
                                                                                                           
         class Worker(threading.Thread)                                                                    
             The Worker object provides a way to process data found in a queue.                            
             When data is found, the corresponding object is killed.                                       
                                                                                                           
             The Worker object runs in its own thread.                                                     
                                                                                                           
               Method resolution order:                                                                    
                  Worker                                                                                   
                  threading.Thread                                                                         
                  threading._Verbose                                                                       
                  __builtin__.object                                                                       
                                                                                                           
                 ---------------------------------------------------------------------------------------   
                                                                                                           
               Methods defined here:                                                                       
                                                                                                           
               __init__(self, ants, farms, mines, queue)                                                   
                  ants: The ant collection                                                                 
                  farms: The farm collection                                                               
                  mines: The mine collection                                                               
                  queue: The FIFO queue where the data have to be collected                                
                                                                                                           
               process(self, item)                                                                         
                  Displays received item.                                                                  
                  Item must be a dict (JSON like hash)                                                     
                  Valid data can be one of the 3 following type:                                           
                  - ant                                                                                    
                  - farm                                                                                   
                  - mine                                                                                   
                                                                                                           
               run(self)                                                                                   
                  The Worker thread main loop:                                                             
                  - Get data from queue and give it to the process method                                  
                                                                                                           
               stop(self)                                                                                  
                  Exit from main loop                                                                      
                                                                                                           
                 ---------------------------------------------------------------------------------------   
                                                                                                           
               Methods inherited from threading.Thread:                                                    
                                                                                                           
               __repr__(self)                                                                              
                                                                                                           
               getName(self)                                                                               
                                                                                                           
               isAlive(self)                                                                               
                  Return whether the thread is alive.                                                      
                                                                                                           
                  This method returns True just before the run() method starts until just                  
                  after the run() method terminates. The module function enumerate()                       
                  returns a list of all alive threads.                                                     
                                                                                                           
               isDaemon(self)                                                                              
                                                                                                           
               is_alive = isAlive(self)                                                                    
                  Return whether the thread is alive.                                                      
                                                                                                           
                  This method returns True just before the run() method starts until just                  
                  after the run() method terminates. The module function enumerate()                       
                  returns a list of all alive threads.                                                     
                                                                                                           
               join(self, timeout=None)                                                                    
                  Wait until the thread terminates.                                                        
                                                                                                           
                  This blocks the calling thread until the thread whose join() method is                   
                  called terminates -- either normally or through an unhandled exception                   
                  or until the optional timeout occurs.                                                    
                                                                                                           
                  When the timeout argument is present and not None, it should be a                        
                  floating point number specifying a timeout for the operation in seconds                  
                  (or fractions thereof). As join() always returns None, you must call                     
                  isAlive() after join() to decide whether a timeout happened -- if the                    
                  thread is still alive, the join() call timed out.                                        
                                                                                                           
                  When the timeout argument is not present or None, the operation will                     
                  block until the thread terminates.                                                       
                                                                                                           
                  A thread can be join()ed many times.                                                     
                                                                                                           
                  join() raises a RuntimeError if an attempt is made to join the current                   
                  thread as that would cause a deadlock. It is also an error to join() a                   
                  thread before it has been started and attempts to do so raises the same                  
                  exception.                                                                               
                                                                                                           
               setDaemon(self, daemonic)                                                                   
                                                                                                           
               setName(self, name)                                                                         
                                                                                                           
               start(self)                                                                                 
                  Start the thread's activity.                                                             
                                                                                                           
                  It must be called at most once per thread object. It arranges for the                    
                  object's run() method to be invoked in a separate thread of control.                     
                                                                                                           
                  This method will raise a RuntimeError if called more than once on the                    
                  same thread object.                                                                      
                                                                                                           
                 ---------------------------------------------------------------------------------------   
                                                                                                           
               Data descriptors inherited from threading.Thread:                                           
                                                                                                           
               daemon                                                                                      
                  A boolean value indicating whether this thread is a daemon thread (True) or not (False). 
                                                                                                           
                  This must be set before start() is called, otherwise RuntimeError is                     
                  raised. Its initial value is inherited from the creating thread; the                     
                  main thread is not a daemon thread and therefore all threads created in                  
                  the main thread default to daemon = False.                                               
                                                                                                           
                  The entire Python program exits when no alive non-daemon threads are                     
                  left.                                                                                    
                                                                                                           
               ident                                                                                       
                  Thread identifier of this thread or None if it has not been started.                     
                                                                                                           
                  This is a nonzero integer. See the thread.get_ident() function. Thread                   
                  identifiers may be recycled when a thread exits and another thread is                    
                  created. The identifier is available even after the thread has exited.                   
                                                                                                           
               name                                                                                        
                  A string used for identification purposes only.                                          
                                                                                                           
                  It has no semantics. Multiple threads may be given the same name. The                    
                  initial name is set by the constructor.                                                  
                                                                                                           
                 ---------------------------------------------------------------------------------------   
                                                                                                           
               Data descriptors inherited from threading._Verbose:                                         
                                                                                                           
               __dict__                                                                                    
                  dictionary for instance variables (if defined)                                           
                                                                                                           
               __weakref__                                                                                 
                  list of weak references to the object (if defined)                                       

          
   Data   
            __author__ = 'Doug Le Tough'                                      
            __copyright__ = 'Copyright 2017, Doug Le Tough'                   
            __credits__ = ['Doug Le Tough']                                   
            __email__ = 'doug.letough@free.fr'                                
            __license__ = 'WTFPL'                                             
            __maintainer__ = 'Doug Le Tough'                                  
            __status__ = 'Testing'                                            
            __version__ = '1.0.0'                                             

                      
   Author             
                          Doug Le Tough                                       

                      
   Credits            
                          ['Doug Le Tough']                                   
